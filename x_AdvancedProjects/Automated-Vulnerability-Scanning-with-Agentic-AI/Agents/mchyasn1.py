import json
from agent import Agent

class mchyasn1(Agent):
    def __init__(self, api_key):
        super().__init__("mchyasn1", api_key)

    def review_strategy(self, strategy, scan_description, log_file_path=None):
        system_message = "You are mchyasn1, a Senior Penetration Tester at 3ushaq Al 7asoob, a highly experienced penetration testing and vulnerability scanning and assessment services firm. Your role is to review the proposed strategy generated by mchyasn0 and check if it is a valid strategy that will accomplish the client's requested needs. Pay special attention to ensure that all commands provided by mchyasn0 are complete and can be executed as-is without requiring any manual modifications. If the strategy or any commands are not satisfactory, provide your expert knowledge on what needs to be modified, along with explanations and recommended adjustments. Respond with the reviewed strategy in JSON format, using the 'approved' key as a boolean to indicate approval, and the 'feedback' key to provide your feedback and suggestions. Always state your name and role at the end of each feedback."
        
        user_message = f"Clients request: {scan_description}, Here is my proposed Strategy:\n{json.dumps(strategy, indent=2)}\n\nPlease review the proposed strategy and provide your feedback. Ensure that all commands are complete and can be executed without manual modifications. Indicate if the strategy is approved and suggest any necessary adjustments. Ensure that mchyasn0 proposes a strategy that is well thought out and implements the steps of a penetration test in a logical order. "
        
        reviewed_strategy = self.generate_response("mchyasn0", user_message, system_message, response_format={"type": "json_object"})
        self.print_agent_output(text=reviewed_strategy, log_file_path=log_file_path)
        return json.loads(reviewed_strategy)

    def review_output(self, output, scan_description, log_file_path=None):
        system_message = "You are mchyasn1, a Senior Penetration Tester at 3ushaq Al 7asoob, a highly experienced penetration testing and vulnerability scanning and assessment services firm. Your role is to review the output of the executed commands and determine if the results meet the client's requirements based on the initial scan description. If the output is satisfactory and meets the client's needs, indicate that no further commands are needed. If additional commands are required to fulfill the client's requirements, provide your expert knowledge on what needs to be done, along with explanations and recommended next steps. Respond with your assessment in JSON format, using the 'satisfactory' key as a boolean to indicate if the output meets the client's requirements, and the 'feedback' key to provide your feedback and suggestions."
        
        user_message = f"Clients request: {scan_description}\nCommand Output:\n{output}\n\nPlease review the command output and determine if it meets the client's requirements based on the initial scan description. Indicate if the output is satisfactory or if additional commands are needed. Note that the results of the scan must meet the requirement of the client, missing any vulnerabilities can be very damaging to our firms reputation. Provide your assessment in JSON format, along with any necessary feedback and suggestions."
        
        mchyasn1_assessment = self.generate_response("mchyasn5", user_message, system_message, response_format={"type": "json_object"})
        self.print_agent_output(text=mchyasn1_assessment, log_file_path=log_file_path)
        return json.loads(mchyasn1_assessment)

    def review_report(self, report, log_file_path=None):
        system_message = "You are mchyasn1, a Senior Penetration Tester at 3ushaq Al 7asoob. Your role is to review the findings report generated by mchyasn4 and provide feedback on its quality, completeness, and professionalism. If the report is satisfactory, indicate your approval by setting the 'Report Approval' key to True. If improvements are needed, set the 'Report Approval' key to False and provide specific suggestions and recommendations in the 'feedback' key."
        
        user_message = f"Findings Report:\n{report}\n\nPlease review the findings report and provide your feedback. Indicate if the report is approved by setting the 'Report Approval' key to True or False. If improvements are needed, provide specific suggestions and recommendations in the 'feedback' key. Respond in JSON format."
        
        mchyasn1_review = self.generate_response("mchyasn4", user_message, system_message, response_format={"type": "json_object"})
        self.print_agent_output(text=mchyasn1_review, log_file_path=log_file_path)
        return json.loads(mchyasn1_review)
